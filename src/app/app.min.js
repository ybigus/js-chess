"use strict";var game=function(){return{move:function(r,a,e,n){if(!board[r][a])return{result:!1};if(current!=board[r][a].color)return{message:messages.NOT_YOUR_TURN,result:!1,alert:!0};var o=this.isKingSafe();if(!o&&"king"==board[r][a].piece&&Math.abs(a-n)>=2)return{result:!1};var t=pieces().getAvailableMoves(r,a),l=_.find(t,function(r){return r.x==e&&r.y==n});if(l){var u=board[r][a],i=board[e][n];return board[e][n]=board[r][a],board[r][a]=null,this.isKingSafe()?(null!=i&&world().killPieceAt(e,n),"w"==current&&null!=passant_capture_b&&passant_capture_b.x==e&&passant_capture_b.y==n&&(board[e-1][n]=null,world().killPieceAt(e-1,n)),"b"==current&&null!=passant_capture_w&&passant_capture_w.x==e&&passant_capture_w.y==n&&(board[e+1][n]=null,world().killPieceAt(e+1,n)),"king"==board[e][n].piece&&(l.long_castling&&(board[e][n+1]==board[e][0],board[e][0]=null),l.castling&&(board[e][n-1]==board[e][7],board[e][7]=null)),("king"==board[e][n].piece||"rook"==board[e][n].piece)&&(board[e][n].moved=!0),"pawn"==board[e][n].piece&&2==Math.abs(r-e)?"w"==current?passant_capture_w={x:e-1,y:n}:passant_capture_b={x:e+1,y:n}:"w"==current?passant_capture_w=null:passant_capture_b=null,"pawn"==board[e][n].piece&&("w"==board[e][n].color&&7==r||"b"==board[e][n].color&&0==r)&&(board[e][n].piece="queen",world().tranformPawnIntoQueen(e,n)),current="w"==current?"b":"w",this.checkForMate()?{result:!0}:{result:!0,game_finished:!0,draw:this.isKingSafe()}):(board[e][n]=i,board[r][a]=u,{message:messages.KING_IS_NOT_SAFE,result:!1,alert:!0})}return{result:!1,alert:!1}},checkForMate:function(){for(var r=0;r<board.length;r++)for(var a=0;a<board[r].length;a++)if(null!=board[r][a]&&board[r][a].color==current)for(var e=pieces().getAvailableMoves(r,a),n=0;n<e.length;n++){var o=_.find(e,function(e){return e.x==r&&e.y==a});if(o){var t=board[r][a],l=board[newX][newY];if(board[newX][newY]=board[r][a],board[r][a]=null,this.isKingSafe())return board[newX][newY]=l,board[r][a]=t,!0;board[newX][newY]=l,board[r][a]=t}}return!1},isKingSafe:function(){for(var r="w"==current?"b":"w",a=0;a<board.length;a++)for(var e=0;e<board[a].length;e++)if(null!=board[a][e]&&board[a][e].color==r){var n=pieces().getAvailableMoves(a,e),o=_.find(n,function(r){return null!=board[r.x][r.y]&&"king"==board[r.x][r.y].piece&&board[r.x][r.y].color==current});if(o)return!1}return!0}}};
var messages={NOT_YOUR_TURN:"Not your turn",KING_IS_NOT_SAFE:"King isn't safe",NOT_YOUR_PIECE:"Not your piece"};
"use strict";var pieces=function(){return{getAvailableMoves:function(l,a){var e=[];switch(board[l][a].piece){case"pawn":e=this.getAvailableMovesForPawn(l,a);break;case"knight":e=this.getAvailableMovesForKnight(l,a);break;case"rook":e=this.getAvailableMovesForRook(l,a);break;case"bishop":e=this.getAvailableMovesForBishop(l,a);break;case"queen":e=this.getAvailableMovesForQueen(l,a);break;case"king":e=this.getAvailableMovesForKing(l,a)}return e},cell_available:function(l,a,e,i,s){return e>7||0>e||i>7||0>i?!1:null==board[e][i]||!s&&board[e][i].color!=board[l][a].color?!0:!1},getAvailableMovesForPawn:function(l,a){var e=[];return"w"==board[l][a].color?(this.cell_available(l,a,l+1,a,!0)&&e.push({x:l+1,y:a}),1==l&&this.cell_available(l,a,l+2,a,!0)&&e.push({x:l+2,y:a}),this.cell_available(l,a,l+1,a+1)&&e.push({x:l+1,y:a+1}),this.cell_available(l,a,l+1,a-1)&&e.push({x:l+1,y:a-1})):(this.cell_available(l,a,l-1,a,!0)&&e.push({x:l-1,y:a}),6==l&&this.cell_available(l,a,l-2,a,!0)&&e.push({x:l-2,y:a}),this.cell_available(l,a,l-1,a+1)&&e.push({x:l-1,y:a+1}),this.cell_available(l,a,l-1,a-1)&&e.push({x:l-1,y:a-1})),e},getAvailableMovesForKnight:function(l,a){var e=[];return this.cell_available(l,a,l+2,a+1)&&e.push({x:l+2,y:a+1}),this.cell_available(l,a,l+2,a-1)&&e.push({x:l+2,y:a-1}),this.cell_available(l,a,l-2,a+1)&&e.push({x:l-2,y:a+1}),this.cell_available(l,a,l-2,a-1)&&e.push({x:l-2,y:a-1}),this.cell_available(l,a,l+1,a+2)&&e.push({x:l+1,y:a+2}),this.cell_available(l,a,l-1,a+2)&&e.push({x:l-1,y:a+2}),this.cell_available(l,a,l+1,a-2)&&e.push({x:l+1,y:a-2}),this.cell_available(l,a,l-1,a-2)&&e.push({x:l-1,y:a-2}),e},getAvailableMovesForRook:function(l,a){for(var e=[],i=l;this.cell_available(l,a,++i,a)&&(e.push({x:i,y:a}),null==board[i][a]););for(i=l;this.cell_available(l,a,--i,a)&&(e.push({x:i,y:a}),null==board[i][a]););for(var s=a;this.cell_available(l,a,l,++s)&&(e.push({x:l,y:s}),null==board[l][s]););for(s=a;this.cell_available(l,a,l,--s)&&(e.push({x:l,y:s}),null==board[l][s]););return e},getAvailableMovesForBishop:function(l,a){for(var e=[],i=l,s=a;this.cell_available(l,a,++i,++s)&&(e.push({x:i,y:s}),null==board[i][s]););for(i=l,s=a;this.cell_available(l,a,--i,--s)&&(e.push({x:i,y:s}),null==board[i][s]););for(i=l,s=a;this.cell_available(l,a,++i,--s)&&(e.push({x:i,y:s}),null==board[i][s]););for(i=l,s=a;this.cell_available(l,a,--i,++s)&&(e.push({x:i,y:s}),null==board[i][s]););return e},getAvailableMovesForQueen:function(l,a){var e=this.getAvailableMovesForRook(l,a),i=this.getAvailableMovesForBishop(l,a);return _.union(e,i)},getAvailableMovesForKing:function(l,a){var e=[];return this.cell_available(l,a,l+1,a)&&e.push({x:l+1,y:a}),this.cell_available(l,a,l+1,a+1)&&e.push({x:l+1,y:a+1}),this.cell_available(l,a,l+1,a-1)&&e.push({x:l+1,y:a-1}),this.cell_available(l,a,l-1,a)&&e.push({x:l-1,y:a}),this.cell_available(l,a,l-1,a+1)&&e.push({x:l-1,y:a+1}),this.cell_available(l,a,l-1,a-1)&&e.push({x:l-1,y:a-1}),this.cell_available(l,a,l,a+1)&&e.push({x:l,y:a+1}),this.cell_available(l,a,l,a-1)&&e.push({x:l,y:a-1}),board[l][a].moved||(null!=board[l][a+1]||null!=board[l][a+2]||null==board[l][a+3]||"rook"!=board[l][a+3].piece||board[l][a+3].moved||e.push({x:l,y:a+2,castling:!0}),null!=board[l][a-1]||null!=board[l][a-2]||null!=board[l][a-3]||null==board[l][a-4]||"rook"!=board[l][a-4].piece||board[l][a-4].moved||e.push({x:l,y:a-2,long_castling:!0})),e}}};
"use strict";var current,passant_capture_w,passant_capture_b,board,world=function(){var e,n,l;return{initWorld:function(){var o=$("#chess"),c=window.innerWidth,i=window.innerHeight,r=45,p=c/i,a=.1,u=1e3;e=new THREE.WebGLRenderer,l=new THREE.PerspectiveCamera(r,p,a,u),n=new THREE.Scene,n.add(l),l.position.z=200;var w=new THREE.CubeGeometry(50,50,50),t=new THREE.MeshBasicMaterial({color:16777215}),b=new THREE.Mesh(w,t);n.add(b),e.setSize(c,i),o.append(e.domElement),this.animation()},animation:function(){requestAnimationFrame(this.animation),e.render(n,l)},startGame:function(){current="w",passant_capture_w=null,passant_capture_b=null,board=[[{piece:"rook",color:"w"},{piece:"knight",color:"w"},{piece:"bishop",color:"w"},{piece:"queen",color:"w"},{piece:"king",color:"w"},{piece:"bishop",color:"w"},{piece:"knight",color:"w"},{piece:"rook",color:"w"}],[{piece:"pawn",color:"w"},{piece:"pawn",color:"w"},{piece:"pawn",color:"w"},{piece:"pawn",color:"w"},{piece:"pawn",color:"w"},{piece:"pawn",color:"w"},{piece:"pawn",color:"w"},{piece:"pawn",color:"w"}],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[{piece:"pawn",color:"b"},{piece:"pawn",color:"b"},{piece:"pawn",color:"b"},{piece:"pawn",color:"b"},{piece:"pawn",color:"b"},{piece:"pawn",color:"b"},{piece:"pawn",color:"b"},{piece:"pawn",color:"b"}],[{piece:"rook",color:"b"},{piece:"knight",color:"b"},{piece:"bishop",color:"b"},{piece:"queen",color:"b"},{piece:"king",color:"b"},{piece:"bishop",color:"b"},{piece:"knight",color:"b"},{piece:"rook",color:"b"}]]},killPieceAt:function(){},tranformPawnIntoQueen:function(){}}};